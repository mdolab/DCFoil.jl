name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  docs:
    # name: Documentation
    runs-on: ubuntu-latest
    # permissions:
    #   actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
    #   contents: write
    #   statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.9.2'
      # - uses: julia-actions/cache@v2
      - name: Configure doc environment
        shell: julia --project=docs/ --color=yes {0} -e
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs/ docs/make.jl
      # - name: Run doctests
      #   shell: julia --project=docs/ --color=yes {0}
      #   run: |
      #     using Documenter: DocMeta, doctest
      #     using DCFoil
      #     DocMeta.setdocmeta!(DCFoil, :DocTestSetup, :(using DCFoil); recursive=true)
      #     doctest(DCFoil)
